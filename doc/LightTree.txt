*LightTree.txt* Lightweight tree explorer


                 _     _       _     _  _____
                | |   (_) __ _| |__ | ||_   _| __ ___  ___   ~
                | |   | |/ _` | '_ \| __|| || '__/ _ \/ _ \  ~
                | |___| | (_| | | | | |_ | || | |  __/  __/  ~
                |_____|_|\__, |_| |_|\__||_||_|  \___|\___|  ~
                         |___/                               ~


                              Reference Manual~


==============================================================================
CONTENTS                                                  *LightTree-contents*

    1.Introduction............................|LightTreeIntro|
    2.Functionality provided..................|LightTreeFunctionality|
        2.1.Global commands...................|LightTreeGlobalCommands|
        2.2.Mappings..........................|LightTreeMappings|
    3.Options.................................|LightTreeOptions|
        3.1.Option summary....................|LightTreeOptionSummary|
        3.2.Option details....................|LightTreeOptionDetails|
    4.License.................................|LightTreeLicense|

==============================================================================
1. Introduction                                               *LightTreeIntro*

LightTree allows you to explore your filesystem and to open files and
directories. It presents the filesystem to you in the form of a tree. It also
allows you to perform simple filesystem operations.

LightTree is a fork of NERDTree. The final objective is to become a completely
different plugin, but as of now some internal functions have the same name and
might cause conflict.

The following features and functionality are provided:
    * Files and directories are displayed in a hierarchical tree structure
    * Different highlighting is provided for the following types of nodes:
        * files
        * directories
        * sym-links
        * windows .lnk files
        * read-only files
        * executable files
    * Many (customisable) mappings are provided to manipulate the tree:
        * Mappings to open/close/explore directory nodes
        * Mappings to change the current root of the tree
        * Mappings to navigate around the tree
    * Filtering of tree content (can be toggled at runtime)
        * custom file filters to prevent e.g. vim backup files being displayed
        * optional displaying of hidden files (. files)
        * files can be "turned off" so that only directories are displayed
    * The order in which the nodes in the tree are listed can be customised.
    * A model of your filesystem is created/maintained as you explore it. This
      has several advantages:
        * All filesystem information is cached and is only re-read on demand
        * If you revisit a part of the tree that you left earlier in your
          session, the directory nodes will be opened/closed as you left them
    * The script remembers the cursor position and window position in the tree,
      so it will always appear exactly as you left it.
    * By default the script overrides the default file browser (netrw), so if
      you :edit a directory LightTree will appear in the current window instead
    * A programmable menu system is provided
        * one default menu plugin is provided to perform basic filesystem
          operations (create/delete/move/copy files/directories)


==============================================================================
2. Functionality provided                             *LightTreeFunctionality*

------------------------------------------------------------------------------
2.1. Global Commands                                 *LightTreeGlobalCommands*

:LightTree [<start-directory>]                                    *:LightTree*
    Opens a tree in the current window. The root of the tree depends on the
    argument given. There are 2 cases: If no argument is given, the current
    directory will be used.  If a directory is given, that will be used. For
    example: >
        :LightTree /home/marty/vim7/src
<

    If a tree already exists for a directory, it is opened. Otherwise a fresh
    tree is created for that directory.

:LightTreeFind                                                *:LightTreeFind*
    Find the current file in a tree.

    If no tree exists and the current file is under vim's CWD, then init a
    tree at the CWD and reveal the file. Otherwise init a tree in the current
    file's directory.

    In any case, the current file is revealed and the cursor is placed on it.

------------------------------------------------------------------------------
2.2. Mappings                                              *LightTreeMappings*

Default  Description~                                             help-tag~
Key~

<CR>...same as |LightTree-o|

o......Open files and directories ..............................|LightTree-o|
O......Recursively open the selected directory..................|LightTree-O|
x......Close the current nodes parent...........................|LightTree-x|
X......Recursively close all children of the current node.......|LightTree-X|

P......Jump to the root node....................................|LightTree-P|
p......Jump to current nodes parent.............................|LightTree-p|
J......Jump down to the next sibling of the current directory...|LightTree-J|
K......Jump up to the previous sibling of the current directory.|LightTree-K|

C......Change the tree root to the selected dir.................|LightTree-C|
u......Move the tree root up one directory......................|LightTree-u|
U......Same as 'u' except the old root node is left open........|LightTree-U|
r......Recursively refresh the current directory................|LightTree-r|
R......Recursively refresh the current root.....................|LightTree-R|
m......Display the menu.........................................|LightTree-m|
cd.....Change the CWD to the dir of the selected node...........|LightTree-cd|
CD.....Change tree root to the CWD..............................|LightTree-CD|

I......Toggle whether hidden files displayed....................|LightTree-I|
f......Toggle whether the file filters are used.................|LightTree-f|
F......Toggle whether files are displayed.......................|LightTree-F|

?......Toggle the display of the quick help.....................|LightTree-?|

------------------------------------------------------------------------------
                                                                 *LightTree-o*
Default key: o
Map option: LightTreeMapActivateNode
Applies to: files and directories.

If a file node is selected, it is opened in the current window.

If a directory is selected it is opened or closed depending on its current
state.

------------------------------------------------------------------------------
                                                                 *LightTree-O*
Default key: O
Map option: LightTreeMapOpenRecursively
Applies to: directories.

Recursively opens the selected directory.

All files and directories are cached, but if a directory would not be
displayed due to file filters (see |'LightTreeIgnore'| |LightTree-f|) or the
hidden file filter (see |'LightTreeShowHidden'|) then its contents are not
cached. This is handy, especially if you have .svn directories.

------------------------------------------------------------------------------
                                                                 *LightTree-x*
Default key: x
Map option: LightTreeMapCloseDir
Applies to: files and directories.

Closes the parent of the selected node.

------------------------------------------------------------------------------
                                                                 *LightTree-X*
Default key: X
Map option: LightTreeMapCloseChildren
Applies to: directories.

Recursively closes all children of the selected directory.

Tip: To quickly "reset" the tree, use |LightTree-P| with this mapping.

------------------------------------------------------------------------------
                                                                 *LightTree-P*
Default key: P
Map option: LightTreeMapJumpRoot
Applies to: no restrictions.

Jump to the tree root.

------------------------------------------------------------------------------
                                                                 *LightTree-p*
Default key: p
Map option: LightTreeMapJumpParent
Applies to: files and directories.

Jump to the parent node of the selected node.

------------------------------------------------------------------------------
                                                                 *LightTree-J*
Default key: J
Map option: LightTreeMapJumpNextSibling
Applies to: files and directories.

Jump to the next sibling of the selected node.

------------------------------------------------------------------------------
                                                                 *LightTree-K*
Default key: K
Map option: LightTreeMapJumpPrevSibling
Applies to: files and directories.

Jump to the previous sibling of the selected node.

------------------------------------------------------------------------------
                                                                 *LightTree-C*
Default key: C
Map option: LightTreeMapChangeRoot
Applies to: files and directories.

Make the selected directory node the new tree root. If a file is selected, its
parent is used.

------------------------------------------------------------------------------
                                                                 *LightTree-u*
Default key: u
Map option: LightTreeMapUpdir
Applies to: no restrictions.

Move the tree root up a dir (like doing a "cd ..").

------------------------------------------------------------------------------
                                                                 *LightTree-U*
Default key: U
Map option: LightTreeMapUpdirKeepOpen
Applies to: no restrictions.

Like |LightTree-u| except that the old tree root is kept open.

------------------------------------------------------------------------------
                                                                 *LightTree-r*
Default key: r
Map option: LightTreeMapRefresh
Applies to: files and directories.

If a dir is selected, recursively refresh that dir, i.e. scan the filesystem
for changes and represent them in the tree.

If a file node is selected then the above is done on it's parent.

------------------------------------------------------------------------------
                                                                 *LightTree-R*
Default key: R
Map option: LightTreeMapRefreshRoot
Applies to: no restrictions.

Recursively refresh the tree root.

------------------------------------------------------------------------------
                                                                 *LightTree-m*
Default key: m
Map option: LightTreeMapMenu
Applies to: files and directories.

Display a menu with filesystem operations.

------------------------------------------------------------------------------
                                                                *LightTree-cd*
Default key: cd
Map option: LightTreeMapChdir
Applies to: files and directories.

Change vims current working directory to that of the selected node.

------------------------------------------------------------------------------
                                                                *LightTree-CD*
Default key: CD
Map option: LightTreeMapCWD
Applies to: no restrictions.

Change tree root to vims current working directory.

------------------------------------------------------------------------------
                                                                 *LightTree-I*
Default key: I
Map option: LightTreeMapToggleHidden
Applies to: no restrictions.

Toggles whether hidden files (i.e. "dot files") are displayed.

------------------------------------------------------------------------------
                                                                 *LightTree-f*
Default key: f
Map option: LightTreeMapToggleFilters
Applies to: no restrictions.

Toggles whether file filters are used. See |'LightTreeIgnore'| for details.

------------------------------------------------------------------------------
                                                                 *LightTree-F*
Default key: F
Map option: LightTreeMapToggleFiles
Applies to: no restrictions.

Toggles whether file nodes are displayed.

------------------------------------------------------------------------------
                                                                 *LightTree-?*
Default key: ?
Map option: LightTreeMapHelp
Applies to: no restrictions.

Toggles whether the quickhelp is displayed.

==============================================================================
3. Customisation                                            *LightTreeOptions*


------------------------------------------------------------------------------
3.1. Customisation summary                            *LightTreeOptionSummary*

The script provides the following options that can customise the behaviour of
LightTree. These options should be set in your vimrc.

|'loaded_light_tree'|           Turns off the script.

|'LightTreeCaseSensitiveSort'|  Toggles case node sorting.

|'LightTreeNaturalSort'|        Toggles natural sort order when sorting nodes.

|'LightTreeHighlightCursorline'|
                                Highlights the current line on the LightTree
                                buffer.

|'LightTreeHijackNetrw'|        Toggles replacing netrw for exploring local
                                directories.

|'LightTreeIgnore'|             Configures which files to ignore.

|'LightTreeRespectWildIgnore'|  Toggles respecting of |'wildignore'|.

|'LightTreeShowHidden'|         Toggles displaying of hidden files files on
                                startup.

|'LightTreeShowLineNumbers'|    Toggles displaying line numbers in the tree
                                window.

|'LightTreeSortOrder'|          Configures how to sort nodes

|'LightTreeCascadeOpenSingleChildDir'|
                                Cascade open while selected directory has only
                                one child that also is a directory.

------------------------------------------------------------------------------
3.2. Customisation details                            *LightTreeOptionDetails*

To enable any of the below options you should put the given line in your
~/.vimrc

                                                         *'loaded_light_tree'*
Disable loading of the plugin: >
    let loaded_light_tree=1
<

------------------------------------------------------------------------------
                                                *'LightTreeCaseSensitiveSort'*
Values: 0 or 1.
Default: 0.

By default nodes are not sorted case sensitively, i.e. nodes could appear like
this: >
    bar.c
    Baz.c
    blarg.c
    boner.c
    Foo.c
<
But, if you set this option to 1 then the case of the nodes will be taken into
account. The above nodes would then be sorted like this: >
    Baz.c
    Foo.c
    bar.c
    blarg.c
    boner.c
<
------------------------------------------------------------------------------
                                                      *'LightTreeNaturalSort'*
Values: 0 or 1.
Default: 0.

By default LightTree does not sort nodes in natural sort order, i.e. nodes
could appear like this: >
    z1.txt
    z10.txt
    z100.txt
    z11.txt
    z110.txt
    z2.txt
    z20.txt
    z3.txt
<
But if you set this option to 1 then the natural sort order will be used. The
above nodes would then be sorted like this: >
    z1.txt
    z2.txt
    z3.txt
    z10.txt
    z11.txt
    z20.txt
    z100.txt
    z110.txt
<
------------------------------------------------------------------------------
                                              *'LightTreeHighlightCursorline'*
Values: 0 or 1.
Default: 1.

If set to 1, the current cursor line in the LightTree buffer will be
highlighted. This is done using the |'cursorline'| option.

------------------------------------------------------------------------------
                                                      *'LightTreeHijackNetrw'*
Values: 0 or 1.
Default: 1.

If set to 1, doing a >
    :edit <some directory>
<
will open up LightTree instead of a netrw in the target window.

------------------------------------------------------------------------------
                                                           *'LightTreeIgnore'*
Values: a list of regular expressions.
Default: ['\~$'].

This option is used to specify which files should not be displayed. It must be
a list of regular expressions. When the tree is rendered, any files/dirs that
match any of the regex's in 'LightTreeIgnore' wont be displayed.

For example if you put the following line in your vimrc: >
    let LightTreeIgnore=['\.vim$', '\~$']
<
then all files ending in .vim or ~ will be ignored.

There are 2 magic flags that can be appended to the end of each regular
expression to specify that the regex should match only files or only dirs.
These flags are "[[dir]]" and "[[file]]". Example: >
    let LightTreeIgnore=['\.d$[[dir]]', '\.o$[[file]]']
<
This will cause all dirs ending in ".d" to be ignored and all files ending in
".o" to be ignored.

Note: to display all files you must use the following
line: >
    let LightTreeIgnore=[]
<

The file filters can be turned on and off dynamically with the |LightTree-f|
mapping.

------------------------------------------------------------------------------
                                               *'LightTreeRespectWildIgnore'*
Values: 0 or 1.
Default: 0.

If set to 1, the |'wildignore'| setting is respected.

------------------------------------------------------------------------------
                                                       *'LightTreeShowHidden'*
Values: 0 or 1.
Default: 0.

This option configures whether to display hidden files by default. This option
can be dynamically toggled, per tree, with the |LightTree-I| mapping.  Use one
of the follow lines to set this option: >
    let LightTreeShowHidden=0
    let LightTreeShowHidden=1
<

------------------------------------------------------------------------------
                                                  *'LightTreeShowLineNumbers'*
Values: 0 or 1.
Default: 0.

This option configures whether to display line numbers for the LightTree
window.  Use one of the follow lines to set this option: >
    let LightTreeShowLineNumbers=0
    let LightTreeShowLineNumbers=1
<

------------------------------------------------------------------------------
                                                        *'LightTreeSortOrder'*
Values: a list of regular expressions.
Default: ['\/$', '*', '\.swp$',  '\.bak$', '\~$']

This option is set to a list of regular expressions which are used to
specify the order of nodes under their parent.

For example, if the option is set to: >
    ['\.vim$', '\.c$', '\.h$', '*', 'foobar']
<
then all .vim files will be placed at the top, followed by all .c files then
all .h files. All files containing the string 'foobar' will be placed at the
end.  The star is a special flag: it tells the script that every node that
doesnt match any of the other regexps should be placed here.

If no star is present in 'LightTreeSortOrder' then one is automatically
appended to the array.

The regex '\/$' should be used to match directory nodes.

After this sorting is done, the files in each group are sorted alphabetically.

Other examples: >
    (1) ['*', '\/$']
    (2) []
    (3) ['\/$', '\.rb$', '\.php$', '*', '\.swp$',  '\.bak$', '\~$']
<
1. Directories will appear last, everything else will appear above.
2. Everything will simply appear in alphabetical order.
3. Dirs will appear first, then ruby and php. Swap files, bak files and vim
   backup files will appear last with everything else preceding them.

------------------------------------------------------------------------------
                                        *'LightTreeCascadeOpenSingleChildDir'*
Values: 0 or 1
Default: 1.

When opening dir nodes, this option tells LightTree to recursively open dirs
that have only one child which is also a dir. LightTree will stop when it opens
a dir that contains anything but a single dir. Use one of the following
lines to set this option: >
    let LightTreeCascadeOpenSingleChildDir=0
    let LightTreeCascadeOpenSingleChildDir=1
<

==============================================================================
4. License                                                  *LightTreeLicense*

LightTree is released under the MIT license.
https://choosealicense.com/licenses/mit/
